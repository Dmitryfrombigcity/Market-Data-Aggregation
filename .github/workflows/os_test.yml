name: ubuntu-latest  windows-latest
on: push
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        version: [ "3.12" ]
        include:
          - os: ubuntu-latest
            path: ~/.cache/pypoetry
          - os: windows-latest
            path: ~\AppData\Local\pypoetry\Cache
    steps:

      - uses: actions/cache@v4
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-pypoetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-pypoetry-
      - name: cloning
        uses: actions/checkout@v4.2.2

      - name: install Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.version }}

      - uses: vedantmgoyal9/setup-wsl2@main
      - run: apt update && apt upgrade -y
        shell: wsl-run {0} # add this to run the commands inside linux
      - run: |
          ls -al
          env
        shell: wsl-run {0} # don't forget to add this
        env:
          MY_ENV_VAR: MY_VALUE
          # WSLENV is a special environment variable to share environment variables between windows and linux
          # see https://devblogs.microsoft.com/commandline/share-environment-vars-between-wsl-and-windows
          WSLENV: MY_ENV_VAR
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        shell: wsl-run {0}

      - run: docker compose -f tests/docker_for_tests.yml up -d
        shell: wsl-run {0}
      - name: install poetry
        run: |
          pip install poetry==1.8.3 
          poetry config virtualenvs.create false
      - name: add deps
        run: |
          poetry install --no-root
      - name: test
        run: pytest -vv

